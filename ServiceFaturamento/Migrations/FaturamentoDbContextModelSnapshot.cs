// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServiceFaturamento.Infrastructure.Data;

#nullable disable

namespace ServiceFaturamento.Migrations
{
    [DbContext(typeof(FaturamentoDbContext))]
    partial class FaturamentoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ServiceFaturamento.Domain.Entities.ItemNotaFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome_produto");

                    b.Property<Guid>("NotaFiscalId")
                        .HasColumnType("uuid")
                        .HasColumnName("nota_fiscal_id");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_unitario");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("produto_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.HasKey("Id");

                    b.HasIndex("NotaFiscalId");

                    b.ToTable("itens_nota_fiscal", (string)null);
                });

            modelBuilder.Entity("ServiceFaturamento.Domain.Entities.NotaFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_emissao");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_fechamento");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("numero");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_total");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.ToTable("notas_fiscais", (string)null);
                });

            modelBuilder.Entity("ServiceFaturamento.Domain.Entities.ItemNotaFiscal", b =>
                {
                    b.HasOne("ServiceFaturamento.Domain.Entities.NotaFiscal", "NotaFiscal")
                        .WithMany("Itens")
                        .HasForeignKey("NotaFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotaFiscal");
                });

            modelBuilder.Entity("ServiceFaturamento.Domain.Entities.NotaFiscal", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
